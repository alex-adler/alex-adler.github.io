@use "sass:math";

:root {
    --grey: #222222;
    --white: whitesmoke;
    --orange: coral;
    --max-width: 1500px;
}

@mixin theme-grey() {
    background: var(--grey);
    color: var(--white);
    a {
        color: var(--white);
        text-decoration: underline;
        text-decoration-style: dotted;
        &:hover {
            text-decoration-style: solid;
        }
    }
}

@mixin theme-orange() {
    background: var(--orange);
    color: var(--grey);
    a {
        color: var(--grey);
    }
}

body {
    margin: 0;
}

h2 {
    // margin: 5vmin 0;
    margin-top: 0;
    margin-bottom: 5vmin;
    padding-left: 2vw;
    font-size: 3em;
}
p {
    position: relative;
    padding: 0 2vw;
    font-size: 1em;
    text-align: justify;
}

// Configure the color of Alex Adler, Projects, and About
.base-navigation {
    fill: var(--white);
    a {
        color: var(--white);
    }
}

.parallax {
    height: 100vh;
    width: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-perspective: 1px;
    perspective: 1px;
    scroll-behavior: smooth;
}

.parallax_group {
    position: relative;
    min-height: 100vh;
    transform-style: preserve-3d;
}

.layer {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    min-height: 100vh;

    #cover & {
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        h1 {
            text-align: center;
            margin-top: 10vh;
        }
    }

    #intro & {
        position: relative;
        min-height: 100vh;
        @include theme-grey();
        p {
            margin: auto;
            max-width: var(--max-width);
        }
    }

    #atmo & {
        position: relative;
        overflow: hidden;
        @include theme-orange();
    }

    #ground-effect & {
        position: relative;
        @include theme-grey();
    }

    #wip & {
        @include theme-orange();
    }
}

.layer_0 {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
}

.layer_-1 {
    -webkit-transform: translateZ(-1px) scale(2);
    transform: translateZ(-1px) scale(2);
}

.layer_-2 {
    -webkit-transform: translateZ(-2px) scale(3.1);
    transform: translateZ(-2px) scale(3.1);
}

.layer_-3 {
    -webkit-transform: translateZ(-3px) scale(4);
    transform: translateZ(-3px) scale(4);
}

.layer_-4 {
    -webkit-transform: translateZ(-4px) scale(5);
    transform: translateZ(-4px) scale(5);
}

// Format credit line for curiosity image
.credit {
    color: var(--white);
    margin: 0;
    margin-right: 0.5em;
    position: absolute;
    text-align: center;
    bottom: 0;
    right: 0;
}

.mars-map {
    position: absolute;
    bottom: 1rem;
    padding-top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    max-width: 110vh;
    width: 70vw;
}

.mars-map svg {
    position: relative;

    circle {
        stroke: var(--color-primary);
        stroke-width: 3;
        fill: none;
    }

    path {
        stroke: var(--color-secondary);
        stroke-width: 3;
        fill: none;
        stroke-dasharray: 30;
        animation: flight-path 5s infinite linear;
    }
}

@keyframes flight-path {
    to {
        stroke-dashoffset: -300;
    }
}

#year-glitch {
    $steps: 50;
    min-width: 1.9em;
    &,
    * {
        animation: cray 6s infinite steps($steps);
        display: inline-block;
    }

    @keyframes cray {
        @for $i from 1 to $steps {
            $per: math.div(100%, $steps) * $i;
            $weight: (100, 200, 300, 400, 500, 600, 700);
            $style: (normal, italic, normal, normal);
            $decor: (none, none, line-through, underline, none, none, none);
            $trans: (none, none, uppercase, lowercase, capitalize, none, none, none, none, none, none);

            $arrayW: random(7);
            $arrayS: random(4);
            $arrayD: random(7);
            $arrayT: random(11);

            #{$per} {
                font-weight: nth($weight, $arrayW);
                font-style: nth($style, $arrayS);
                text-decoration: nth($decor, $arrayD);
                text-transform: nth($trans, $arrayT);
            }
        }
    }
}

.tooltip {
    position: relative;
    &::before {
        content: attr(data-tooltip); /* here's the magic */
        position: absolute;

        // Vertical position
        bottom: 100%;

        // Horizontal Centering
        left: 50%;
        transform: translateX(-50%);

        /* basic styles */
        width: 10em;
        padding: 0.2em;
        border-radius: 10px;
        background: var(--orange);
        color: var(--grey);
        text-align: center;

        display: none; /* hide by default */
    }

    &:hover:before {
        display: block;
    }
}

.atmo-flex {
    display: flex;
    justify-content: center;
    max-width: var(--max-width);
    margin: auto;
}

#atmo-plot {
    float: right;
    aspect-ratio: 9/16;
    min-width: 300px;

    input[type="checkbox"] {
        appearance: none;
        display: block;

        width: 100%;

        content: url(plots/big_atmo.svg);
        &:checked {
            content: url(plots/small_atmo.svg);
        }
    }
}

canvas {
    position: relative;
    width: 49vw;
    height: 59vh;
    padding: 0;
    margin: 0;
    display: block;
    background-color: coral;
}

#canvas-wing-in-ground {
    float: left;
    background-color: var(--grey);
}

#canvas-wing-in-ground-graph {
    float: right;
    background-color: var(--grey);
}

.slider-container {
    display: grid;
    grid-template-columns: 9em auto;
    width: 100%;
    .slider {
        width: 100%;
    }
    h3 {
        margin: 0;
        width: 100%;
    }
}

// Mobile displays
@media screen and (max-width: 950px) {
    .mars-map {
        width: 100%;
        position: relative;
    }
    #intro {
        position: relative;
    }
    #atmo {
        position: relative;
        .layer p {
            width: 100%;
            top: 0;
        }
        .atmo-flex {
            flex-direction: column;
            align-items: center;
        }
    }
    p {
        text-align: justify;
    }
    canvas {
        clear: both;
        height: 40vh;
        width: 100%;
    }
}
